name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and push backend
        run: |
          cd backend
          docker build -t ${{ secrets.BACKEND_IMAGE }} .
          docker push ${{ secrets.BACKEND_IMAGE }}

      - name: Build and push frontend
        run: |
          cd frontend
          docker build -t ${{ secrets.FRONTEND_IMAGE }} .
          docker push ${{ secrets.FRONTEND_IMAGE }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          port: ${{ secrets.VM_SSH_PORT }}
          script: |
             echo " Connected to EC2 as $(whoami)"
          echo "Working directory: $(pwd)"
          
          # Check if Docker is installed
         if ! command -v docker >/dev/null 2>&1; then
            echo "Docker not found! Installing Docker..."
            sudo apt update
            sudo apt install -y docker.io
            sudo systemctl enable docker
            sudo systemctl start docker
          else
            echo "Docker is installed: $(docker --version)"
          fi
          
          # Check if Docker Compose is installed
          if ! command -v docker-compose &> /dev/null
          then
            echo "Docker Compose not found! Installing Docker Compose..."
            sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
          else
            echo "Docker Compose is installed: $(docker-compose --version)"
          fi

          # Navigate to project directory
          cd /opt/mean-crud || { echo "Directory not found! Exiting."; exit 1; }

          # Pull latest images and restart containers
            
            docker-compose pull
            docker-compose up -d

